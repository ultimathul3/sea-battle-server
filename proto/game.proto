syntax = "proto3";

package game;

option go_package = "github.com/ultimathul3/sea-battle-server/proto;gamepb";

import "google/api/annotations.proto";

service GameService {
    rpc CreateGame (CreateGameRequest) returns (CreateGameResponse) {
        option (google.api.http) = {
            post: "/games"
            body: "*"
        };
    };
    rpc GetGames (GetGamesRequest) returns (GetGamesResponse) {
        option (google.api.http) = {
            get: "/games"
        };
    };
    rpc JoinGame (JoinGameRequest) returns (JoinGameResponse) {
        option (google.api.http) = {
            post: "/games/join"
            body: "*"
        };
    };
    rpc StartGame (StartGameRequest) returns (StartGameResponse) {
        option (google.api.http) = {
            post: "/games/start"
            body: "*"
        };
    };
    rpc Shoot (ShootRequest) returns (ShootResponse) {
        option (google.api.http) = {
            post: "/games/shoot"
            body: "*"
        };
    };
    rpc Wait (WaitRequest) returns (WaitResponse) {
        option (google.api.http) = {
            post: "/games/wait"
            body: "*"
        };
    };
}

message CreateGameRequest {
    string host_nickname = 1;
    string host_field = 2;
}

message CreateGameResponse {
    string host_uuid = 1;
}

message GetGamesRequest {}

message GetGamesResponse {
    repeated string games = 1;
}

message JoinGameRequest {
    string host_nickname = 1;
	string opponent_nickname = 2;
}

message JoinGameResponse {
    string opponent_uuid = 1;
}

message StartGameRequest {
    string host_nickname = 1;
    string opponent_field = 2;
    string opponent_uuid = 3;
}

message StartGameResponse {}

message ShootRequest {
    string host_nickname = 1;
    uint32 x = 2;
    uint32 y = 3;
    string uuid = 4;
}

enum Status {
    UNKNOWN_STATUS = 0;
    GAME_CREATED = 1;
    WAITING_FOR_OPPONENT = 2;
    GAME_STARTED = 3;
    HOST_HIT = 4;
    HOST_MISS = 5;
    OPPONENT_HIT = 6;
    OPPONENT_MISS = 7;
    HOST_WON = 8;
    OPPONENT_WON = 9;
}

enum Ship {
    UNKNOWN_SHIP = 0;
    SINGLE_DECK = 1;
    DOUBLE_DECK_DOWN = 2;
    THREE_DECK_DOWN = 3;
    FOUR_DECK_DOWN = 4;
    DOUBLE_DECK_RIGHT = 5;
    THREE_DECK_RIGHT = 6;
    FOUR_DECK_RIGHT = 7;
}

message ShootResponse {
    Status status = 1;
    Ship destroyed_ship = 2;
    uint32 x = 3;
    uint32 y = 4;
}

message WaitRequest {
    string uuid = 1;
}

message WaitResponse {
    Status status = 1;
    uint32 x = 2;
    uint32 y = 3;
    Ship destroyed_ship = 4;
    uint32 destroyed_x = 5;
    uint32 destroyed_y = 6;
    string message = 7;
}
